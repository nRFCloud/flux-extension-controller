apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flux-extension-controller.fullname" . }}
  labels:
    {{- include "flux-extension-controller.labels" . | nindent 4 }}
spec:
  {{- if not .Values.controller.leaderElection.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "flux-extension-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "flux-extension-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "flux-extension-controller.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      containers:
      - name: manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        args:
        - --leader-elect={{ .Values.controller.leaderElection.enabled }}
        - --config=/etc/config/config.yaml
        env:
        - name: GITHUB_APP_ID
          value: "{{ .Values.github.appId }}"
        - name: GITHUB_PRIVATE_KEY_PATH
          value: "/etc/github/private-key"
        - name: GITHUB_ORGANIZATION
          value: "{{ .Values.controller.organization }}"
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
          protocol: TCP
        - name: health
          containerPort: {{ .Values.healthCheck.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: github-private-key
          mountPath: /etc/github
          readOnly: true
        {{- with .Values.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "flux-extension-controller.fullname" . }}-config
      - name: github-private-key
        secret:
          secretName: {{ .Values.github.privateKeySecret.name }}
          items:
          - key: {{ .Values.github.privateKeySecret.key }}
            path: private-key
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
